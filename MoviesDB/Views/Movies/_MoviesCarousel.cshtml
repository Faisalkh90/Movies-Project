@model IEnumerable<MoviesDB.EF.Entertainments>

<style>
    .home__carousel .home__card {
        width: 500px;
        height: 650px;
        overflow: hidden;
    }

        .home__carousel .home__card img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center;
        }
</style>

<div class="home home--static">
    <div class="home__carousel owl-carousel" id="flixtv-hero">
        @foreach (var item in Model.OrderByDescending(item => item.Id).Take(5))
        {
            <div class="home__card">
                <a href="@Url.Action("Details", "Movies", new { id = item.Id })">
                    <img src="~/Content/images/movies/@item.Image_Cover" alt="">
                </a>
                <div>
                    <h2>@item.Title</h2>
                    <ul>
                        <li>@item.Release_Year</li>
                    </ul>
                </div>
            </div>
        }
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Set the interval time in milliseconds
        var intervalTime = 4000; // 3 seconds

        // Get the carousel element and its items
        var carousel = $('#flixtv-hero');
        var items = carousel.find('.home__card');

        // Set the initial slide index and total number of slides
        var currentSlideIndex = 0;
        var totalSlides = items.length;

        // Create the interval function
        var intervalFunction = setInterval(function () {
            // Increment the current slide index
            currentSlideIndex++;

            // If we've reached the end of the carousel, go back to the beginning
            if (currentSlideIndex >= totalSlides) {
                currentSlideIndex = 0;
            }

            // Calculate the distance to move the carousel
            var distance = currentSlideIndex * -500;

            // Animate the carousel to the new position
            items.animate({ left: distance + 'px' }, 500);
        }, intervalTime);
    });
</script>